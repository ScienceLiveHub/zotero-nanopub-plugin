name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # Disable cache to ensure fresh install
          # cache: 'npm'
      
      - name: Clear npm cache and node_modules
        run: |
          echo "üóëÔ∏è Clearing npm cache to ensure fresh dependencies..."
          npm cache clean --force
          rm -rf node_modules
          rm -f package-lock.json
          echo "‚úÖ Cache cleared"
      
      - name: Install dependencies
        run: npm install --no-cache
      
      - name: Build nanopub-view dependency
        run: |
          echo "üì¶ Building nanopub-view library from GitHub..."
          cd node_modules/@sciencelivehub/nanopub-view
          
          echo "üìã Package contents:"
          ls -la
          
          echo "üì¶ Installing nanopub-view dependencies..."
          npm install || { echo "‚ùå npm install failed"; exit 1; }
          
          echo "üìã Checking package.json for build scripts..."
          if grep -q '"build"' package.json; then
            echo "‚úÖ Found build script in package.json"
            cat package.json | grep -A 5 '"scripts"'
            echo ""
            echo "üî® Using package's build script..."
            npm run build || { 
              echo "‚ö†Ô∏è Package build script failed, trying custom Vite config..."; 
            }
          fi
          
          # Check if build succeeded
          if [ -f "dist/nanopub-viewer.esm.js" ]; then
            echo "‚úÖ Build successful using package script!"
            ls -lah dist/
            cd ../../..
            exit 0
          fi
          
          echo "‚ö†Ô∏è No build script or build failed, using custom Vite config..."
          
          echo "üìù Creating Vite config..."
          cat > vite.lib.config.js << 'VITE_EOF'
          import { defineConfig } from 'vite';
          import path from 'path';
          import { fileURLToPath } from 'url';
          
          const __dirname = path.dirname(fileURLToPath(import.meta.url));
          
          export default defineConfig({
            build: {
              outDir: 'dist',
              emptyOutDir: true,
              lib: {
                entry: path.resolve(__dirname, 'src/index.js'),
                name: 'NanopubViewer',
                formats: ['es', 'umd'],
                fileName: (format) => {
                  if (format === 'es') return 'nanopub-viewer.esm.js';
                  if (format === 'umd') return 'nanopub-viewer.js';
                }
              },
              rollupOptions: {
                output: {
                  assetFileNames: (assetInfo) => {
                    if (assetInfo.name === 'style.css') return 'nanopub-viewer.css';
                    return assetInfo.name;
                  }
                }
              }
            }
          });
          VITE_EOF
          
          echo "üî® Building with Vite..."
          npx vite build --config vite.lib.config.js || { 
            echo "‚ùå Vite build failed!"; 
            echo "Checking for errors...";
            cat package.json | grep "type";
            exit 1; 
          }
          
          echo "üìÇ Build output:"
          ls -lah dist/ || echo "‚ùå No dist directory created!"
          
          echo "üîç Checking CSS files..."
          ls -la dist/*.css
          
          # Rename style.css to nanopub-viewer.css if it exists
          if [ -f "dist/style.css" ]; then
            echo "üìù Found style.css, renaming to nanopub-viewer.css..."
            mv -v dist/style.css dist/nanopub-viewer.css
          fi
          
          # Rename nanopub-view.css to nanopub-viewer.css if it exists  
          if [ -f "dist/nanopub-view.css" ]; then
            echo "üìù Found nanopub-view.css, renaming to nanopub-viewer.css..."
            mv -v dist/nanopub-view.css dist/nanopub-viewer.css
          fi
          
          echo "üìÇ Final dist contents after rename:"
          ls -lah dist/
          
          cd ../../..
          
          echo "‚úÖ nanopub-view built successfully"
          ls -lah node_modules/@sciencelivehub/nanopub-view/dist/
          
      - name: Verify nanopub-view build
        run: |
          echo "üîç Verifying nanopub-view build..."
          
          # Show current directory
          echo "üìç Current directory:"
          pwd
          
          # Log version info (don't cd, just use the path)
          echo "üì¶ nanopub-view package info:"
          echo "Git commit:"
          (cd node_modules/@sciencelivehub/nanopub-view && git log -1 --oneline 2>/dev/null) || echo "  (not a git repo)"
          echo "Package version:"
          cat node_modules/@sciencelivehub/nanopub-view/package.json | grep '"version"' || echo "  (no version found)"
          
          # List what files actually exist
          echo "üìÇ Files in nanopub-view/dist:"
          ls -la node_modules/@sciencelivehub/nanopub-view/dist/ || echo "‚ùå Directory not found!"
          
          # Check if critical files exist
          if [ ! -f "node_modules/@sciencelivehub/nanopub-view/dist/nanopub-viewer.esm.js" ]; then
            echo "‚ùå ERROR: nanopub-viewer.esm.js not found!"
            echo "Looking for: $(pwd)/node_modules/@sciencelivehub/nanopub-view/dist/nanopub-viewer.esm.js"
            exit 1
          fi
          
          if [ ! -f "node_modules/@sciencelivehub/nanopub-view/dist/nanopub-viewer.css" ]; then
            echo "‚ùå ERROR: nanopub-viewer.css not found!"
            exit 1
          fi
          
          # Check file sizes
          VIEW_JS_SIZE=$(wc -c < "node_modules/@sciencelivehub/nanopub-view/dist/nanopub-viewer.esm.js")
          VIEW_CSS_SIZE=$(wc -c < "node_modules/@sciencelivehub/nanopub-view/dist/nanopub-viewer.css")
          
          echo "üìä Build file sizes:"
          echo "  - nanopub-viewer.esm.js: $VIEW_JS_SIZE bytes"
          echo "  - nanopub-viewer.css: $VIEW_CSS_SIZE bytes"
          
          # Verify files are not too small
          if [ "$VIEW_JS_SIZE" -lt 10000 ]; then
            echo "‚ùå ERROR: nanopub-viewer.esm.js is too small ($VIEW_JS_SIZE bytes)"
            exit 1
          fi
          
          if [ "$VIEW_CSS_SIZE" -lt 1000 ]; then
            echo "‚ùå ERROR: nanopub-viewer.css is too small ($VIEW_CSS_SIZE bytes)"
            exit 1
          fi
          
          echo "‚úÖ nanopub-view verification passed!"
      
      - name: Build nanopub-create dependency
        run: |
          echo "üì¶ Building nanopub-create library from GitHub..."
          cd node_modules/@sciencelivehub/nanopub-create
          
          # Install dependencies
          npm install
          
          # Create a temporary library-only vite config
          cat > vite.lib.config.js << 'VITE_EOF'
          import { defineConfig } from 'vite';
          import path from 'path';
          import wasm from 'vite-plugin-wasm';
          import topLevelAwait from 'vite-plugin-top-level-await';
          
          export default defineConfig({
            plugins: [
              wasm(),
              topLevelAwait()
            ],
            build: {
              lib: {
                entry: path.resolve(__dirname, 'src/index.js'),
                name: 'NanopubCreator',
                formats: ['es', 'umd'],
                fileName: (format) => {
                  if (format === 'es') return 'nanopub-creator.esm.js';
                  if (format === 'umd') return 'nanopub-creator.js';
                }
              },
              rollupOptions: {
                output: {
                  assetFileNames: (assetInfo) => {
                    if (assetInfo.name === 'style.css') return 'nanopub-creator.css';
                    return assetInfo.name;
                  }
                }
              }
            }
          });
          VITE_EOF
          
          # Build using the library config
          npx vite build --config vite.lib.config.js
          
          cd ../../..
          
          echo "‚úÖ nanopub-create built successfully"
          ls -lah node_modules/@sciencelivehub/nanopub-create/dist/
      
      - name: Build plugin
        run: npm run build
      
      - name: Verify build
        run: |
          echo "‚úÖ Build completed successfully!"
          ls -lah build/
          echo ""
          echo "üì¶ XPI size:"
          du -h build/nanopub.xpi
          echo ""
          echo "üìã XPI contents (checking for nanopub-view files):"
          unzip -l build/nanopub.xpi | grep -E "(nanopub-viewer|nanopub-creator)" || echo "‚ö†Ô∏è Warning: No nanopub-view/create files found in XPI!"
          echo ""
          echo "üîç Checking if styles directory exists in XPI:"
          unzip -l build/nanopub.xpi | grep "content/styles/" || echo "‚ö†Ô∏è Warning: No styles directory found!"
          echo ""
          echo "üìÑ Full XPI structure:"
          unzip -l build/nanopub.xpi | head -50
          
      - name: Upload XPI artifact
        uses: actions/upload-artifact@v4
        with:
          name: nanopub-plugin-xpi
          path: build/nanopub.xpi
          retention-days: 30
